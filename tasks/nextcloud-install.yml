---
# php occ installation tasks for ansible-role-nextcloud-docker.

- name: Sleep for 15 seconds and continue with play
  wait_for:
    timeout: 15

- name: Check status of Nextcloud installation.
  shell: "{{ nextcloud_occ_prefix }} php occ status --output=json | tail -n1"
  register: nextcloud_raw_status
  changed_when: false

- name: Store status.
  set_fact:
    nextcloud_status: "{{ nextcloud_raw_status.stdout | from_json }}"

- name: Complete Nextcloud installation from cli.
  shell: "{{ nextcloud_occ_prefix }} {{ nextcloud_occ_install }}"
  become: true
  when: "not nextcloud_status.installed"
  no_log: false

- name: Check trusted domains.
  shell: "{{ nextcloud_occ_prefix }} php occ config:system:get trusted_domains --output=json"
  register: nextcloud_raw_trusted_domains
  become: true
  changed_when: false

- name: Store trusted domains.
  set_fact:
    nextcloud_trusted_domains: "{{ nextcloud_raw_trusted_domains.stdout }}"

- name: Set trusted domain(s) for Nextcloud install.
  block:
    # As long as we're using array indecies to add each domain (see next task),
    # we basically MUST remove all of them (e.g. if there were originally three
    # trusted_domains, and the new list consisted of two, we could wind up with
    # an unexpected entry in the array.
    - name: Remove trusted domains.
      shell: "{{ nextcloud_occ_prefix }} php occ config:system:delete trusted_domains"

    # I don't know if there's a better way to do this or not...
    - name: Set specified trusted domains.
      shell: "{{ nextcloud_occ_prefix }} php occ config:system:set trusted_domains {{ index }} --value='{{ domain }}'"
      loop: "{{ nextcloud_config_trusted_domains }}"
      loop_control:
        loop_var: "domain"
        index_var: "index"
      become: true

  when: "nextcloud_trusted_domains != nextcloud_config_trusted_domains"

- name: Enable system encryption.
  block:
    - name: Check encryption status.
      shell: "{{ nextcloud_occ_prefix }} php occ encryption:status"
      register: nextcloud_encryption_status
      changed_when: false

    - name: Enable encryption.
      shell: "{{ nextcloud_occ_prefix }} php occ encryption:enable"
      when: "'enabled: false' in nextcloud_encryption_status.stdout"

- name: Enable encryption module.
  block:
    - name: Check if module is already installed.
      shell: "{{ nextcloud_occ_prefix }} php occ app:list --output=json"
      register: nextcloud_raw_app_list
      changed_when: false

    - name: Store app list.
      set_fact:
        nextcloud_app_list: "{{ nextcloud_raw_app_list.stdout }}"

    - name: Install encryption module.
      shell: "{{ nextcloud_occ_prefix }} php occ app:enable {{ nextcloud_encryption_module }}"
      when: "nextcloud_encryption_module in nextcloud_app_list.disabled"
