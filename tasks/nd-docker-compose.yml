---
# tasks related to docker-compose for ansible-role-nextcloud-docker.

- name: Work out lists of volumes for various containers.
  block:
    - name: Set Nextcloud volumes.
      set_fact:
        nd_nextcloud_volumes: "{{ nd_nextcloud_required_volumes|unique }}"

    - name: Set PostgreSQL volumes.
      set_fact:
        nd_postgres_volumes: "{{ nd_postgres_required_volumes|unique }}"

    - name: Set Nginx Proxy volumes.
      set_fact:
        nd_nginx_proxy_volumes: "{{ (nd_nginx_proxy_required_volumes + nd_use_letsencrypt|ternary(nd_letsencrypt_required_volumes, []))|unique }}"

    - name: Set Letsencrypt helper volumes.
      set_fact:
        nd_letsencrypt_volumes: "{{ (nd_letsencrypt_required_volumes + nd_nginx_proxy_required_volumes)|unique }}"

- name: Create a list of env variables for Nextcloud.
  set_fact:
    nd_nextcloud_env_vars: >
      {{ nd_nextcloud_env_vars
      + (nd_use_redis is sameas true)|ternary(nd_redis_env_vars, [])
      + (nd_use_letsencrypt is sameas true)|ternary(nd_letsencrypt_env_vars, []) }}
  changed_when: false
  # The list contains the redis password.
  no_log: true

- name: Create directory for docker-compose files on remote.
  file:
    path: "{{ nd_docker_compose_project_dir }}"
    state: directory
  changed_when: false

- name: Transfer and populate env file for database container.
  template:
    src: "{{ nd_docker_compose_project_src }}/db.env.j2"
    dest: "{{ nd_docker_compose_project_dir }}/db.env"
  changed_when: false
  # The env contains the postgres password.
  no_log: true

- name: Transfer dockerfile to remote.
  template:
    src: "{{ nd_docker_compose_project_src }}/docker-compose.yml.j2"
    dest: "{{ nd_docker_compose_project_dir }}/docker-compose.yml"
  changed_when: false
  # The dockerfile contains the Redis host password.
  no_log: true

- name: Copy Nextcloud dockerfile dependencies to remote.
  copy:
    src: "{{ nd_docker_compose_project_src }}/proxy"
    dest: "{{ nd_docker_compose_project_dir }}"
  changed_when: false

- name: Build and start Nextcloud with docker-compose.
  docker_compose:
    project_src: "{{ nd_docker_compose_project_dir }}"
    build: false
    restarted: true
  changed_when: false
  register: nd_docker_compose_output

- name: Remove docker-compose directory and files on remote.
  file:
    path: "{{ nd_docker_compose_project_dir }}"
    state: absent
  changed_when: false
  when: "nd_docker_compose_remove_project"
