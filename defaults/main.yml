---
# defaults file for ansible-role-nextcloud-docker

#
# docker-compose variables.
#
nd_docker_compose_project: "nextcloud"
nd_docker_compose_project_dir: "/tmp/{{ nd_docker_compose_project }}"
nd_docker_compose_project_src: "files/docker-compose"
nd_docker_compose_remove_project: true

#
# Role configuration options.
#
nd_allow_insecure_defaults: false
nd_use_letsencrypt: true
# nd_use_redis: true
# nd_use_cron: true
nd_domain_name: "example.local"
nd_nextcloud_install_tasks_file: "nd-nextcloud-install.yml"
nd_nextcloud_post_install_tasks_file: "nd-nextcloud-post-install.yml"

#
# Service passwords.
#
nd_postgres_password: "insecure"
nd_redis_host_password: "insecure"
nd_nextcloud_admin_password: "insecure"

#
# Service environment vars and volumes.
#

nd_nextcloud_required_apps: []

#
# PostgreSQL
#
nd_postgres_database: "nextcloud"
nd_postgres_host: "db"
nd_postgres_user: "nextcloud"

#
# Redis
#
# Env vars.
nd_redis_env_vars:
  - name: "REDIS_HOST"
    value: "redis"
  - name: "REDIS_HOST_PORT"
    value: "6379"
  - name: "REDIS_HOST_PASSWORD"
    value: "{{ nd_redis_host_password }}"

#

#
# Nextcloud install, setup related vars.
#
nd_nextcloud_admin_user: "admin"

nd_nextcloud_occ_prefix: >-
  docker exec --user www-data {{ nd_docker_compose_project }}_app_1

nd_nextcloud_occ_install_command: >
  maintenance:install
  --database="pgsql"
  --database-host="{{ nd_postgres_host }}"
  --database-name="{{ nd_postgres_database }}"
  --database-user="{{ nd_postgres_user }}"
  --database-pass="{{ nd_postgres_password }}"
  --admin-user="{{ nd_nextcloud_admin_user }}"
  --admin-pass="{{ nd_nextcloud_admin_password }}"

nd_nextcloud_encryption_module: "encryption"

nd_nextcloud_occ_commands:
  - command: "config:system:set trusted_domains 0 --value=localhost"
  - command: "config:system:set trusted_domains 1 --value={{ nd_domain_name }}"
  - command: "encryption:enable"
  - command: "app:enable {{ nd_nextcloud_encryption_module }}"

nd_docker_network: "proxy-tier"

nd_docker_volumes:
  db: "db"
  app: "nextcloud"
  letsencrypt-companion: "certs"
  proxy:
    conf: "vhost.d"
    docroot: "html"

nd_docker_compose:
  app:
    environment:
      - "VIRTUAL_HOST={{ nd_domain_name }}"
      - "LETSENCRYPT_HOST={{ nd_domain_name }}"
      - "LETSENCRYPT_EMAIL=admin@example.local"
      - "POSTGRES_HOST={{ nd_postgres_host }}"
    networks:
      - "default"
      - "{{ nd_docker_network }}"
    volumes:
      - "{{ nd_docker_volumes.app }}:/var/www/html"
  db:
    environment:
      - "POSTGRES_DB={{ nd_postgres_database }}"
      - "POSTGRES_HOST={{ nd_postgres_host }}"
      - "POSTGRES_PASSWORD={{ nd_postgres_password }}"
      - "POSTGRES_USER={{ nd_postgres_user }}"
    volumes:
      - "{{ nd_docker_volumes.db }}:/var/lib/postgresql/data"
  proxy:
    networks:
      - "{{ nd_docker_network }}"
    volumes:
      - "{{ nd_docker_volumes['letsencrypt-companion'] }}:/etc/nginx/certs:ro"
      - "{{ nd_docker_volumes.proxy.conf }}:/etc/nginx/vhost.d"
      - "{{ nd_docker_volumes.proxy.docroot }}:/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
  letsencrypt-companion:
    networks:
      - "{{ nd_docker_network }}"
    volumes:
      - "{{ nd_docker_volumes['letsencrypt-companion'] }}:/etc/nginx/certs"
      - "{{ nd_docker_volumes.proxy.conf }}:/etc/nginx/vhost.d"
      - "{{ nd_docker_volumes.proxy.docroot }}:/usr/share/nginx/html"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
