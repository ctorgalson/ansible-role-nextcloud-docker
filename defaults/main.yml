---
# defaults file for ansible-role-nextcloud-docker

# To-do:
#
# - Database settings are somehow wrong--sqlite is in use.
# - Add prompt when default credentials used.
# - Non-docker volume for nextcloud app.
# - Optional letsencrypt (ignore letsencrypt tasks if VIRTUAL_HOST
#   contains "local").
# - Turn on encryption.
# - Enable default encryption module.
# - What needs to be done to update NC on Docker?
# - Molecule testing.

# Nextcloud config.
#
# nextcloud_config vars.
nextcloud_config_domain: "example.local"
nextcloud_config_db_root_password: "root"
nextcloud_config_db_database: "mysql"
nextcloud_config_db_database_name: "nextcloud"
nextcloud_config_db_database_user: "nextcloud"
nextcloud_config_db_database_password: "mysql"
nextcloud_config_trusted_domains:
  - "localhost"
  - "{{ nextcloud_config_domain }}"
nextcloud_config_admin_user: "admin"
nextcloud_config_admin_password: "pass"

# Nextcloud containers.
#
# nextcloud_app_container vars.
nextcloud_app_container_env:
  - key: "VIRTUAL_HOST"
    value: "{{ nextcloud_config_domain }}"
nextcloud_app_container_image: "nextcloud:latest"
nextcloud_app_container_name: "nextcloud-app"
nextcloud_app_container_restart: true
nextcloud_app_container_state: started
nextcloud_app_container_volumes:
  - "nextcloud:/var/www/html"
  - "./app/config:/var/www/html/config"
  - "./app/custom_apps:/var/www/html/custom_apps"
  - "./app/data:/var/www/html/data"
  - "./app/themes:/var/www/html/themes"
  - "/etc/localtime:/etc/localtime:ro"

# nextcloud_mariadb_container vars.
nextcloud_mariadb_container_image: "mariadb"
nextcloud_mariadb_container_name: "nextcloud-mariadb"
nextcloud_mariadb_container_restart: true
nextcloud_mariadb_container_state: started
nextcloud_mariadb_container_volumes:
  - "db:/var/lib/mysql"
  - "/etc/localtime:/etc/localtime:ro"
nextcloud_mariadb_container_env:
  - key: "MYSQL_ROOT_PASSWORD"
    value: "{{ nextcloud_config_db_root_password }}"
  - key: "MYSQL_PASSWORD"
    value: "{{ nextcloud_config_db_database_password }}"
  - key: "MYSQL_DATABASE"
    value: "{{ nextcloud_config_db_database_name }}"
  - key: "MYSQL_USER"
    value: "{{ nextcloud_config_db_database_user }}"
  - key: "MYSQL_HOST"
    value: "{{ nextcloud_mariadb_container_name }}"

# nextcloud_nginx_container vars.
nextcloud_nginx_container_image: "jwilder/nginx-proxy:alpine"
nextcloud_nginx_container_name: "nextcloud-nginx"
nextcloud_nginx_container_ports:
  - "80:80"
  - "443:443"
nextcloud_nginx_container_restart: true
nextcloud_nginx_container_state: started
nextcloud_nginx_container_volumes:
  - "./proxy/conf.d:/etc/nginx/conf.d:rw"
  - "./proxy/vhost.d:/etc/nginx/vhost.d:rw"
  - "./proxy/html:/usr/share/nginx/html:rw"
  - "./proxy/certs:/etc/nginx/certs:ro"
  - "/etc/localtime:/etc/localtime:ro"
  - "/var/run/docker.sock:/tmp/docker.sock:ro"

# Nextcloud network.
#
# nextcloud_network vars.
nextcloud_network_name: "nextcloud_network"
nextcloud_network_connected:
  - "{{ nextcloud_app_container_name }}"
  - "{{ nextcloud_mariadb_container_name }}"
  - "{{ nextcloud_nginx_container_name }}"

# Nextcloud volumes.
#
# Nextcloud volume vars.
nextcloud_volumes:
  - "nextcloud"
  - "mariadb"

# Nextcloud cli.
#
# Nextcloud cli vars.
nextcloud_occ_prefix: "docker exec --user www-data {{ nextcloud_app_container_name }}"
nextcloud_occ_install: >
  php occ maintenance:install
  --database="{{ nextcloud_config_db_database }}"
  --database-name="{{ nextcloud_config_db_database_name }}"
  --database-user="{{ nextcloud_config_db_database_user }}"
  --database-pass="{{ nextcloud_config_db_database_password }}"
  --database-host="{{ nextcloud_mariadb_container_name }}"
  --admin-user="{{ nextcloud_config_admin_user }}"
  --admin-pass="{{ nextcloud_config_admin_password }}"
